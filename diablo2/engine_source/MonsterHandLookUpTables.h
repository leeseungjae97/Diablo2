#pragma once
#include "MoveAbleObjectAnimLookUpTables.h"

namespace m
{
	static math::Vector2 monsterOffsets[(int)eMonsterType::End][(int)MDDiablo::eAnimationType::End] = {
		{
			math::Vector2(0.f, 0.f),
			math::Vector2(0.f, 0.f),
			math::Vector2(0.f, 0.f),
			math::Vector2(0.f, 0.f),
			math::Vector2(0.f, 0.f),
			math::Vector2(0.f, 0.f),
			math::Vector2(0.f, 0.f),
			math::Vector2(0.f, 0.f),
			math::Vector2(0.f, 0.f),
			math::Vector2(0.f, 0.f),
			math::Vector2(0.f, 0.f),
			math::Vector2(0.f, 0.f),
			math::Vector2(0.f, 0.f),
		},
		{
		math::Vector2(0.f, 0.f),
		math::Vector2(0.f, 0.f),
		math::Vector2(0.f, 0.f),
		math::Vector2(0.f, 0.f),
		math::Vector2(0.f, 0.f),
		math::Vector2(0.f, 0.f),
		math::Vector2(0.f, 0.f),
		math::Vector2(0.f, 0.f),
		math::Vector2(0.f, 0.f),
		math::Vector2(0.f, 0.f),
		math::Vector2(0.f, 0.f),
		math::Vector2(0.f, 0.f),
		math::Vector2(0.f, 0.f),
	},
		{
		math::Vector2(0.f, 0.f),
		math::Vector2(0.f, 0.f),
		math::Vector2(0.f, 0.f),
		math::Vector2(0.f, 0.f),
		math::Vector2(0.f, 0.f),
		math::Vector2(0.f, 0.f),
		math::Vector2(0.f, 0.f),
		math::Vector2(0.f, 0.f),
		math::Vector2(0.f, 0.f),
		math::Vector2(0.f, 0.f),
		math::Vector2(0.f, 0.f),
		math::Vector2(0.f, 0.f),
		math::Vector2(0.f, 0.f),
	},
		{
		math::Vector2(0.f, 0.f),
		math::Vector2(0.f, 0.f),
		math::Vector2(0.f, 0.f),
		math::Vector2(0.f, 0.f),
		math::Vector2(0.f, 0.f),
		math::Vector2(0.f, 0.f),
		math::Vector2(0.f, 0.f),
		math::Vector2(0.f, 0.f),
		math::Vector2(0.f, 0.f),
		math::Vector2(0.f, 0.f),
		math::Vector2(0.f, 0.f),
		math::Vector2(0.f, 0.f),
		math::Vector2(0.f, 0.f),
	},
		{
			math::Vector2(0.f, -10.f),
			math::Vector2(0.f, 0.f),
			math::Vector2(0.f, 0.f),
			math::Vector2(0.f, 25.f),
			math::Vector2(0.f, 15.f),
			math::Vector2(0.f, 25.f),
			math::Vector2(0.f, 0.f),
			math::Vector2(0.f, 0.f),
			math::Vector2(0.f, 0.f),
			math::Vector2(0.f, 0.f),
			math::Vector2(0.f, 0.f),
			math::Vector2(0.f, 0.f),
			math::Vector2(0.f, 0.f),
		},
				{
			math::Vector2(0.f, 18.f),
			math::Vector2(0.f, 18.f),
			math::Vector2(0.f, 0.f),
			math::Vector2(0.f, 5.f),
			math::Vector2(0.f, 17.f),
			math::Vector2(0.f, 15.f),
			math::Vector2(0.f, 0.f),
			math::Vector2(0.f, 0.f),
			math::Vector2(0.f, 0.f),
			math::Vector2(0.f, 0.f),
			math::Vector2(0.f, 0.f),
			math::Vector2(0.f, 0.f),
			math::Vector2(0.f, 0.f),
		}
	};
	static std::wstring monsterRHandNames[(int)eMonsterType::End][(int)MDDiablo::eAnimationType::End] = {
		{
			L"",
			L"",
			L"",
			L"",
			L"",
			L"",
			L"",
			L"",
			L"",
			L"",
			L"",
			L"",
			L"",
		},
		{
	L"",
	L"",
	L"",
	L"",
	L"",
	L"",
	L"",
	L"",
	L"",
	L"",
	L"",
	L"",
	L"",
},
		{
	L"",
	L"",
	L"",
	L"",
	L"",
	L"",
	L"",
	L"",
	L"",
	L"",
	L"",
	L"",
	L"",
},
		{
	L"",
	L"",
	L"",
	L"",
	L"",
	L"",
	L"",
	L"",
	L"",
	L"",
	L"",
	L"",
	L"",
},
		{
			L"balrogAttackRH",
			L"",
			L"",
			L"balrogHitRH",
			L"balrogNaturalRH",
			L"balrogRunRH",
			L"",
			L"",
			L"",
			L"",
			L"",
			L"",
			L"",
			L"",
		},
		{
			L"fallenAttack1RH",
			L"fallenAttack2RH",
			L"",
			L"fallenGetHitRH",
			L"fallenNaturalRH",
			L"fallenRunRH",
			L"",
			L"",
			L"",
			L"",
			L"",
			L"",
			L"",
			L"fallenToDeadRH",
		},
	};
	static std::wstring monsterLHandNames[(int)eMonsterType::End][(int)MDDiablo::eAnimationType::End] = {
		{
			L"",
			L"",
			L"",
			L"",
			L"",
			L"",
			L"",
			L"",
			L"",
			L"",
			L"",
			L"",
			L"",
		},
		{
			L"",
			L"",
			L"",
			L"",
			L"",
			L"",
			L"",
			L"",
			L"",
			L"",
			L"",
			L"",
			L"",
		},
		{
		L"",
		L"",
		L"",
		L"",
		L"",
		L"",
		L"",
		L"",
		L"",
		L"",
		L"",
		L"",
		L"",
	},
		{
		L"",
		L"",
		L"",
		L"",
		L"",
		L"",
		L"",
		L"",
		L"",
		L"",
		L"",
		L"",
		L"",
	},
		{
		L"",
		L"",
		L"",
		L"",
		L"",
		L"",
		L"",
		L"",
		L"",
		L"",
		L"",
		L"",
		L"",
	},
	};
	static math::Vector2 monsterHandSizes[(int)eMonsterType::End][(int)MDDiablo::eAnimationType::End] = {
		//Diablo
		{
			math::Vector2(0.f, 0.f),
			math::Vector2(0.f, 0.f),
			math::Vector2(0.f, 0.f),
			math::Vector2(0.f, 0.f),
			math::Vector2(0.f, 0.f),
			math::Vector2(0.f, 0.f),
			math::Vector2(0.f, 0.f),
			math::Vector2(0.f, 0.f),
			math::Vector2(0.f, 0.f),
			math::Vector2(0.f, 0.f),
			math::Vector2(0.f, 0.f),
			math::Vector2(0.f, 0.f),
			math::Vector2(0.f, 0.f),
	},
	// Andariel
{
		   math::Vector2(0.f, 0.f),
		   math::Vector2(0.f, 0.f),
		   math::Vector2(0.f, 0.f),
		   math::Vector2(0.f, 0.f),
		   math::Vector2(0.f, 0.f),
		   math::Vector2(0.f, 0.f),
		   math::Vector2(0.f, 0.f),
		   math::Vector2(0.f, 0.f),
		   math::Vector2(0.f, 0.f),
		   math::Vector2(0.f, 0.f),
		   math::Vector2(0.f, 0.f),
		   math::Vector2(0.f, 0.f),
		   math::Vector2(0.f, 0.f),
	   },
	   // Duriel
{
		   math::Vector2(0.f, 0.f),
		   math::Vector2(0.f, 0.f),
		   math::Vector2(0.f, 0.f),
		   math::Vector2(0.f, 0.f),
		   math::Vector2(0.f, 0.f),
		   math::Vector2(0.f, 0.f),
		   math::Vector2(0.f, 0.f),
		   math::Vector2(0.f, 0.f),
		   math::Vector2(0.f, 0.f),
		   math::Vector2(0.f, 0.f),
		   math::Vector2(0.f, 0.f),
		   math::Vector2(0.f, 0.f),
		   math::Vector2(0.f, 0.f),
	   },
	   // Mephisto
{
		   math::Vector2(0.f, 0.f),
		   math::Vector2(0.f, 0.f),
		   math::Vector2(0.f, 0.f),
		   math::Vector2(0.f, 0.f),
		   math::Vector2(0.f, 0.f),
		   math::Vector2(0.f, 0.f),
		   math::Vector2(0.f, 0.f),
		   math::Vector2(0.f, 0.f),
		   math::Vector2(0.f, 0.f),
		   math::Vector2(0.f, 0.f),
		   math::Vector2(0.f, 0.f),
		   math::Vector2(0.f, 0.f),
		   math::Vector2(0.f, 0.f),
	   },
	   //Balrog
	   {
		   math::Vector2(207.f, 165.f),
		   math::Vector2(0.f, 0.f),
		   math::Vector2(0.f, 0.f),
		   math::Vector2(157.f, 80.f),
		   math::Vector2(161.f, 74.f),
		   math::Vector2(152.f, 76.f),
		   math::Vector2(0.f, 0.f),
		   math::Vector2(0.f, 0.f),
		   math::Vector2(0.f, 0.f),
		   math::Vector2(0.f, 0.f),
		   math::Vector2(0.f, 0.f),
		   math::Vector2(0.f, 0.f),
		   math::Vector2(0.f, 0.f),
		   math::Vector2(0.f, 0.f),
	   },
			   {
		   math::Vector2(108.f, 91.f),
		   math::Vector2(109.f, 67.f),
		   math::Vector2(0.f, 0.f),
		   math::Vector2(80.f, 60.f),
		   math::Vector2(59.f, 46.f),
		   math::Vector2(64.f, 43.f),
		   math::Vector2(0.f, 0.f),
		   math::Vector2(0.f, 0.f),
		   math::Vector2(0.f, 0.f),
		   math::Vector2(0.f, 0.f),
		   math::Vector2(0.f, 0.f),
		   math::Vector2(0.f, 0.f),
		   math::Vector2(0.f, 0.f),
		   math::Vector2(118.f, 102.f),
	   },
	};
	static int monsterHandLength[(int)eMonsterType::End][(int)MDDiablo::eAnimationType::End] = {
		{
			0,
			0,
			0,
			0,
			0,
			0,
			0,
			0,
			0,
			0,
			0,
			0,
			0,
		},
		{
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
},
		{
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
},
		{
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
},
		{
			16,
			0,
			0,
			6,
			8,
			8,
			0,
			0,
			0,
			0,
			0,
			0,
			0,
			20,
		},
	    {
			10,
			15,
			0,
			7,
			20,
			10,
			0,
			0,
			0,
			0,
			0,
			0,
			0,
			20,
		},
	};
}
